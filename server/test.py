from fastapi import FastAPI, File, UploadFile
import tensorflow as tf
import numpy as np
from tensorflow.keras.preprocessing import image
from typing import List

app = FastAPI()

# üîπ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Labels ‡∏Ç‡∏≠‡∏á‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ
CLASS_LABELS = ["Daisy", "Dandelion", "Roses", "Sunflowers", "Tulips"]

# üîπ ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå
MODEL_PATH = "server/models/flower_type.h5"
model = tf.keras.models.load_model(MODEL_PATH)

@app.post("/predictflower/")
async def predict(file: UploadFile = File(...)):
    # üîπ ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
    contents = await file.read()
    with open("temp.jpg", "wb") as f:
        f.write(contents)

    # üîπ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ ‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏•
    img = image.load_img("temp.jpg", target_size=(224, 224))
    img_array = image.img_to_array(img) / 127.5 - 1  # Normalize ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏ó‡∏£‡∏ô
    img_array = np.expand_dims(img_array, axis=0)  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô (1, 224, 224, 3)

    # üîπ ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå
    predictions = model.predict(img_array)
    predicted_class = np.argmax(predictions, axis=1)[0]  # ‡∏î‡∏∂‡∏á class index ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
    predicted_label = CLASS_LABELS[predicted_class]  # ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ

    # üîπ ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà Frontend
    return {"filename": file.filename, "prediction": predicted_label}
